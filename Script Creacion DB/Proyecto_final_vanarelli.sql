-- MySQL Script generated by MySQL Workbench
-- Thu Aug 17 16:15:38 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema proyecto_final
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema proyecto_final
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `proyecto_final` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `proyecto_final` ;

-- -----------------------------------------------------
-- Table `proyecto_final`.`Categorias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyecto_final`.`Categorias` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proyecto_final`.`Orden_de_compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyecto_final`.`Orden_de_compra` (
  `nro_oc` INT NOT NULL,
  `fecha` DATE NOT NULL,
  `id_cliente` INT NOT NULL,
  PRIMARY KEY (`nro_oc`),
  INDEX `id_cliente` (`id_cliente` ASC) VISIBLE,
  CONSTRAINT `orden_de_compra_ibfk_2`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `proyecto_final`.`Clientes` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proyecto_final`.`colores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyecto_final`.`colores` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(30) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proyecto_final`.`talles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyecto_final`.`talles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(30) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proyecto_final`.`productos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyecto_final`.`productos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(100) NULL DEFAULT NULL,
  `id_talle` INT NULL DEFAULT NULL,
  `id_color` INT NULL DEFAULT NULL,
  `id_categoria` INT NOT NULL,
  `fecha_compra` DATE NOT NULL,
  `precio_compra` FLOAT NOT NULL,
  `precio_venta` FLOAT NOT NULL,
  `stock` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_categoria` (`id_categoria` ASC) VISIBLE,
  INDEX `id_color` (`id_color` ASC) VISIBLE,
  INDEX `id_talle` (`id_talle` ASC) VISIBLE,
  CONSTRAINT `productos_ibfk_2`
    FOREIGN KEY (`id_categoria`)
    REFERENCES `proyecto_final`.`Categorias` (`id`),
  CONSTRAINT `productos_ibfk_3`
    FOREIGN KEY (`id_color`)
    REFERENCES `proyecto_final`.`colores` (`id`),
  CONSTRAINT `productos_ibfk_4`
    FOREIGN KEY (`id_talle`)
    REFERENCES `proyecto_final`.`talles` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proyecto_final`.`Integra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyecto_final`.`Integra` (
  `nro_oc` INT NOT NULL,
  `productos_id` INT NOT NULL,
  `cantidad` INT NOT NULL,
  `talle` INT NOT NULL,
  PRIMARY KEY (`nro_oc`, `productos_id`),
  INDEX `fk_Orden_de_compra_has_productos_productos1_idx` (`productos_id` ASC) VISIBLE,
  INDEX `fk_Orden_de_compra_has_productos_Orden_de_compra1_idx` (`nro_oc` ASC) VISIBLE,
  CONSTRAINT `fk_Orden_de_compra_has_productos_Orden_de_compra1`
    FOREIGN KEY (`nro_oc`)
    REFERENCES `proyecto_final`.`Orden_de_compra` (`nro_oc`),
  CONSTRAINT `fk_Orden_de_compra_has_talles_Orden_de_compra1`
    FOREIGN KEY (`talle`)
    REFERENCES `proyecto_final`.`talles` (`id`),
  CONSTRAINT `fk_Orden_de_compra_has_productos_productos1`
    FOREIGN KEY (`productos_id`)
    REFERENCES `proyecto_final`.`productos` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proyecto_final`.`provincias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyecto_final`.`provincias` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(30) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proyecto_final`.`proveedores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyecto_final`.`proveedores` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cuit` BIGINT NOT NULL,
  `razon_social` VARCHAR(50) NOT NULL,
  `direccion` VARCHAR(100) NOT NULL,
  `id_provincia` INT NULL DEFAULT NULL,
  `mail` VARCHAR(50) NOT NULL,
  `telefono` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_provincia` (`id_provincia` ASC) VISIBLE,
  CONSTRAINT `proveedores_ibfk_1`
    FOREIGN KEY (`id_provincia`)
    REFERENCES `proyecto_final`.`provincias` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proyecto_final`.`Proveen`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyecto_final`.`Proveen` (
  `productos_id` INT NOT NULL,
  `proveedores_id` INT NOT NULL,
  PRIMARY KEY (`productos_id`, `proveedores_id`),
  INDEX `fk_productos_has_proveedores_proveedores1_idx` (`proveedores_id` ASC) VISIBLE,
  INDEX `fk_productos_has_proveedores_productos1_idx` (`productos_id` ASC) VISIBLE,
  CONSTRAINT `fk_productos_has_proveedores_productos1`
    FOREIGN KEY (`productos_id`)
    REFERENCES `proyecto_final`.`productos` (`id`),
  CONSTRAINT `fk_productos_has_proveedores_proveedores1`
    FOREIGN KEY (`proveedores_id`)
    REFERENCES `proyecto_final`.`proveedores` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proyecto_final`.`Ventas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyecto_final`.`Ventas` (
  `nro_fc` INT NOT NULL,
  `fecha` DATE NOT NULL,
  `id_cliente` INT NOT NULL,
  `descuento` FLOAT NULL DEFAULT NULL,
  `total` FLOAT NULL DEFAULT NULL,
  `nro_oc_referido` INT NOT NULL,
  PRIMARY KEY (`nro_fc`, `nro_oc_referido`),
  INDEX `id_cliente` (`id_cliente` ASC) VISIBLE,
  INDEX `fk_Ventas_Orden_de_compra1_idx` (`nro_oc_referido` ASC) VISIBLE,
  CONSTRAINT `fk_Ventas_Orden_de_compra1`
    FOREIGN KEY (`nro_oc_referido`)
    REFERENCES `proyecto_final`.`Orden_de_compra` (`nro_oc`),
  CONSTRAINT `ventas_ibfk_2`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `proyecto_final`.`Clientes` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proyecto_final`.`baja_clientes_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyecto_final`.`baja_clientes_log` (
  `id` INT NOT NULL,
  `dni` INT NULL DEFAULT NULL,
  `nombre` VARCHAR(50) NULL DEFAULT NULL,
  `apellido` VARCHAR(50) NULL DEFAULT NULL,
  `direccion` VARCHAR(100) NULL DEFAULT NULL,
  `id_provincia` INT NULL DEFAULT NULL,
  `mail` VARCHAR(50) NULL DEFAULT NULL,
  `telefono` INT NULL DEFAULT NULL,
  `accion` VARCHAR(30) NULL DEFAULT NULL,
  `usuario_sistema` VARCHAR(30) NULL DEFAULT NULL,
  `fecha_log` DATE NULL DEFAULT NULL,
  `hora_log` TIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proyecto_final`.`clientes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyecto_final`.`clientes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dni` INT NOT NULL,
  `nombre` VARCHAR(50) NOT NULL,
  `apellido` VARCHAR(50) NOT NULL,
  `direccion` VARCHAR(100) NOT NULL,
  `id_provincia` INT NULL DEFAULT NULL,
  `mail` VARCHAR(50) NOT NULL,
  `telefono` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_provincia` (`id_provincia` ASC) VISIBLE,
  CONSTRAINT `clientes_ibfk_1`
    FOREIGN KEY (`id_provincia`)
    REFERENCES `proyecto_final`.`provincias` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 14
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proyecto_final`.`orden_de_compra_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyecto_final`.`orden_de_compra_log` (
  `nro_oc` INT NOT NULL,
  `fecha` DATE NULL DEFAULT NULL,
  `id_cliente` INT NULL DEFAULT NULL,
  `accion` VARCHAR(30) NULL DEFAULT NULL,
  `usuario_sistema` VARCHAR(30) NULL DEFAULT NULL,
  `fecha_log` DATE NULL DEFAULT NULL,
  `hora_log` TIME NULL DEFAULT NULL,
  PRIMARY KEY (`nro_oc`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

-- -----------------------------------------------------
-- VISTAS
-- -----------------------------------------------------

CREATE VIEW v_productos_rojos AS
SELECT p.descripcion as descripcion_producto, c.descripcion as color
FROM Productos p
INNER JOIN colores c on p.id_color = c.id
WHERE id_color = 1;

CREATE VIEW v_productos_por_categoria AS
SELECT p.descripcion as descripcion_producto, c.descripcion as categoria
FROM productos p
INNER JOIN categorias c ON p.id_categoria = c.id;

CREATE VIEW v_clientes_por_orden_de_compra AS
SELECT nro_oc, fecha, c.nombre, c.apellido
FROM orden_de_compra
INNER JOIN clientes c ON id_cliente = c.id;

CREATE VIEW v_orden_de_compra_junio_2023 AS
SELECT nro_oc, fecha, c.nombre, c.apellido
FROM orden_de_compra
INNER JOIN clientes c on id_cliente = c.id
WHERE fecha >= '2023-06-01' and fecha <= '2023-06-30';

CREATE VIEW v_orden_de_compra_total AS
SELECT oc.nro_oc, oc.fecha, c.nombre, c.apellido, p.descripcion, i.cantidad, t.descripcion as talle
FROM orden_de_compra oc
INNER JOIN clientes c on id_cliente = c.id
INNER JOIN integra i on oc.nro_oc = i.nro_oc
INNER JOIN productos p on i.productos_id = p.id
INNER JOIN talles t on p.id_talle = t.id
ORDER BY nro_oc;

CREATE VIEW v_productos_por_proveedor AS
SELECT prod.descripcion as descripcion_producto, col.descripcion, c.descripcion as categoria, prov.razon_social
FROM productos prod
INNER JOIN categorias c on prod.id_categoria = c.id
INNER JOIN colores col on prod.id_color = col.id
INNER JOIN proveen pv on prod.id = pv.productos_id
INNER JOIN proveedores prov on pv.proveedores_id = prov.id
ORDER BY prov.razon_social;

CREATE VIEW v_ventas_detalle AS
SELECT v.nro_fc, v.fecha, c.nombre, c.apellido, oc.nro_oc, p.descripcion, i.cantidad, p.precio_venta, v.descuento, round((i.cantidad * p.precio_venta) - v.descuento, 2) as total
FROM Ventas v
INNER JOIN clientes c on v.id_cliente = c.id
INNER JOIN orden_de_compra oc on nro_oc_referido = oc.nro_oc
INNER JOIN integra i on i.nro_oc = oc.nro_oc
INNER JOIN productos p on i.productos_id = p.id;

-- -----------------------------------------------------
-- FUNCIONES
-- -----------------------------------------------------

DELIMITER $$
CREATE FUNCTION obtener_datos(p_id INT)
RETURNS VARCHAR(100)
DETERMINISTIC
BEGIN
    DECLARE nombre_y_apellido VARCHAR(100);
    SELECT CONCAT(nombre, ' ', apellido) INTO nombre_y_apellido FROM clientes WHERE id = p_id;
    RETURN nombre_y_apellido;
END$$
DELIMITER ;

DELIMITER $$
CREATE FUNCTION stock_x_producto(p_id_prod INT)
RETURNS FLOAT
NO SQL
BEGIN
    DECLARE total INT;
    SET total = (select stock FROM productos prod WHERE prod.id = p_id_prod);
    RETURN total;
END$$
DELIMITER ;

-- -----------------------------------------------------
-- STORED PROCEDURES
-- -----------------------------------------------------

DELIMITER $$
CREATE PROCEDURE ordenar_tabla_clientes(IN p_campo_ordenamiento VARCHAR(30), IN p_tipo_ordenamiento VARCHAR(4))
BEGIN
    SET @consulta = CONCAT('SELECT * FROM clientes ORDER BY ', p_campo_ordenamiento, ' ', p_tipo_ordenamiento, ';');
    PREPARE consulta FROM @consulta;
    EXECUTE consulta;
END$$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE crear_nuevo_cliente(IN p_id INT, IN p_dni INT, IN p_nombre VARCHAR(50), IN p_apellido VARCHAR(50), IN p_direccion VARCHAR(100), IN p_id_provincia INT, IN p_mail VARCHAR(50), in p_telefono INT)
BEGIN
    IF NOT EXISTS (SELECT * FROM clientes WHERE id = p_id OR dni = p_dni) THEN
        INSERT INTO clientes (id, dni, nombre, apellido, direccion, id_provincia, mail, telefono) VALUES (p_id, p_dni, p_nombre, p_apellido, p_direccion, p_id_provincia, p_mail, p_telefono);
        SELECT 'Registro creado exitosamente.' AS mensaje;
    ELSE
        SELECT 'El registro ya existe en la tabla.' AS mensaje;
    END IF;
END$$
DELIMITER ;

-- -----------------------------------------------------
-- TRIGGERS
-- -----------------------------------------------------

CREATE TRIGGER t_orden_de_compra
AFTER INSERT ON orden_de_compra
FOR EACH ROW
INSERT INTO orden_de_compra_log(nro_oc, fecha, id_cliente, accion, usuario_sistema, fecha_log, hora_log)
VALUES (new.nro_oc, new.fecha, new.id_cliente, 'nueva oc', system_user(), now(), curtime());/* CREACION DE TRIGGER DE ACTUALIZACION DE TABLA DE BAJA DE CLIENTES (LOG) */


CREATE TRIGGER t_baja_clientes
BEFORE DELETE ON clientes
FOR EACH ROW
INSERT INTO baja_clientes_log(id, dni, nombre, apellido, direccion, id_provincia, mail, telefono, accion, usuario_sistema, fecha_log, hora_log)
VALUES (old.id, old.dni, old.nombre, old.apellido, old.direccion, old.id_provincia, old.mail, old.telefono, 'eliminado', system_user(), now(), curtime());



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
